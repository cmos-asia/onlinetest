<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="false">

	<!-- 权限管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 数据库认证的实现 org.springrain.frame.shiro.ShiroDbRealm -->
		<property name="realm" ref="shiroDbRealm" />
		<!-- session 管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 缓存管理器 -->
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>
	<!-- session管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 超时时间 -->
		<property name="globalSessionTimeout" value="1800000" />
		<!-- session存储的实现 -->
		<property name="sessionDAO" ref="shiroSessionDao" />
		<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
		<property name="sessionIdCookie" ref="sharesession" />
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
	</bean>

	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的name,对应的默认是 JSESSIONID -->
		<constructor-arg name="name" value="SHAREJSESSIONID" />
		<!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
		<property name="path" value="/" />
	</bean>
	<!-- session存储的实现 -->
	<bean id="shiroSessionDao"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" />

	<!-- 单机session -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

	<!-- session 集群 -->
	<!-- 
	<bean id="shiroCacheManager" class="org.springrain.frame.shiro.ShiroRedisCacheManager"> 
		<property name="cached" ref="redisCached" /> 
	</bean>
	 -->

	<!-- shiro的主过滤器,beanId 和web.xml中配置的filter name需要保持一致 -->
	<bean id="shiroFilter" class="org.base.frame.shiro.FrameShiroFilterFactoryBean"
		depends-on="frameperms">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager" />
	
		<!-- 访问地址的过滤规则,从上至下,从左至右的优先级,如果有匹配的规则,就会返回,不会再进行匹配 -->
		<property name="filterChainDefinitions">
			<value>
				/front/** = anon
			    /ace/** = anon
				/js/** = anon
				/css/** = anon
				/images/** = anon
				/unauth = anon
				/system/unauth = anon
				/getCaptcha=anon
				/system/getCaptcha=anon
				/login = anon
				/system/login = anon
				/favicon.ico = anon
				/weixin/f/oauth2=anon
				/weixin/f/** =anon
				/weixin/token/** = anon
				/servlet/fileupload=user
				/index = user,framefwlog,keepone
				/logout = logout
				/**/ajax/** = user,framefwlog,keepone
				/system/menu/leftMenu=systemuser,keepone
				/system/**=systemuser,framefwlog,keepone,frameperms
				/** = frontuser,framefwlog,keepone,frameperms
			</value>
		</property>
		<!-- 声明自定义的过滤器 -->
		<property name="filters">
			<map>
			    <!-- 访问日志记录的过滤器 -->
			    <entry key="framefwlog" value-ref="framefwlog"></entry>
			    <!--权限校验的过滤器 -->
				<entry key="frameperms" value-ref="frameperms"></entry>
				 <!-- 前台用户过滤器 -->
				<entry key="frontuser" value-ref="frontuser"></entry>
				
				 <!-- 后台用户过滤器 -->
				<entry key="systemuser" value-ref="systemuser"></entry>
			    <!-- 踢出上个账户的过滤器 -->
			    <entry key="keepone" value-ref="keepone"/>  
			    
			</map>
		</property>
	</bean>
	<!-- 起效权限注解,这个很少在web项目中用到,一般是控制url的访问,不是在controller中声明权限注解 -->
	<!-- 
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	 -->
	 

</beans>